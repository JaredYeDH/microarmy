# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug/test
  TARGETDIR  = bin
  TARGET     = $(TARGETDIR)/test
  DEFINES   += -DDEBUG -DBACKWARD_HAS_BFD=1 -DGLM_FORCE_RADIANS
  INCLUDES  += -Ilib/Qor -Ilib/Qor/lib/kit -I/usr/local/include -I/usr/include/bullet -I/usr/include/raknet/DependentExtensions
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -std=c++11 `python2-config --includes` `pkg-config --cflags cairomm-1.0 pangomm-1.4`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += `python2-config --libs` `pkg-config --libs cairomm-1.0 pangomm-1.4` -L/usr/local/lib -L/usr/local/lib64
  LIBS      += -lz -lbfd -liberty -lpthread -lGL -lGLU -lSDL2 -lGLEW -lassimp -lfreeimage -lopenal -lalut -logg -lvorbis -lvorbisfile -lboost_system -lboost_thread -lboost_filesystem -lboost_python -lboost_coroutine -lboost_regex -ljsoncpp -lBulletSoftBody -lBulletDynamics -lBulletCollision -lLinearMath -lRakNetDLL
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release/test
  TARGETDIR  = bin
  TARGET     = $(TARGETDIR)/microarmy_dist
  DEFINES   += -DNDEBUG
  INCLUDES  += -Ilib/Qor -Ilib/Qor/lib/kit -I/usr/local/include -I/usr/include/bullet -I/usr/include/raknet/DependentExtensions
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O3 -std=c++11 `python2-config --includes` `pkg-config --cflags cairomm-1.0 pangomm-1.4`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s `python2-config --libs` `pkg-config --libs cairomm-1.0 pangomm-1.4` -L/usr/local/lib -L/usr/local/lib64
  LIBS      += -lpthread -lGL -lGLU -lSDL2 -lGLEW -lassimp -lfreeimage -lopenal -lalut -logg -lvorbis -lvorbisfile -lboost_system -lboost_thread -lboost_filesystem -lboost_python -lboost_coroutine -lboost_regex -ljsoncpp -lBulletSoftBody -lBulletDynamics -lBulletCollision -lLinearMath -lz -lRakNetDLL
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/Pregame.o \
	$(OBJDIR)/Game.o \
	$(OBJDIR)/Thing.o \
	$(OBJDIR)/HUD.o \
	$(OBJDIR)/Intro.o \
	$(OBJDIR)/Player.o \
	$(OBJDIR)/Pass.o \
	$(OBJDIR)/Light.o \
	$(OBJDIR)/Scene.o \
	$(OBJDIR)/Actuation.o \
	$(OBJDIR)/Net.o \
	$(OBJDIR)/Sprite.o \
	$(OBJDIR)/Node.o \
	$(OBJDIR)/Camera.o \
	$(OBJDIR)/Material.o \
	$(OBJDIR)/Session.o \
	$(OBJDIR)/Grid.o \
	$(OBJDIR)/Canvas.o \
	$(OBJDIR)/Sound.o \
	$(OBJDIR)/Audio.o \
	$(OBJDIR)/ViewModel.o \
	$(OBJDIR)/ResourceCache.o \
	$(OBJDIR)/Physics.o \
	$(OBJDIR)/BasicState.o \
	$(OBJDIR)/Pipeline.o \
	$(OBJDIR)/NodeInterface.o \
	$(OBJDIR)/TileMap.o \
	$(OBJDIR)/LoadingState.o \
	$(OBJDIR)/Filesystem.o \
	$(OBJDIR)/BasicPartitioner.o \
	$(OBJDIR)/Graphics.o \
	$(OBJDIR)/Texture.o \
	$(OBJDIR)/Profile.o \
	$(OBJDIR)/PipelineShader.o \
	$(OBJDIR)/Resource.o \
	$(OBJDIR)/Qor.o \
	$(OBJDIR)/StateMachine.o \
	$(OBJDIR)/ScriptState.o \
	$(OBJDIR)/Input.o \
	$(OBJDIR)/Particle.o \
	$(OBJDIR)/Console.o \
	$(OBJDIR)/Headless.o \
	$(OBJDIR)/ScreenFader.o \
	$(OBJDIR)/Interpreter.o \
	$(OBJDIR)/Window.o \
	$(OBJDIR)/ShadowBuffer.o \
	$(OBJDIR)/Mesh.o \
	$(OBJDIR)/PlayerInterface3D.o \
	$(OBJDIR)/Shader.o \
	$(OBJDIR)/PlayerInterface2D.o \
	$(OBJDIR)/Menu.o \
	$(OBJDIR)/Tracker.o \
	$(OBJDIR)/Util.o \
	$(OBJDIR)/suite.o \
	$(OBJDIR)/log.o \
	$(OBJDIR)/args.o \
	$(OBJDIR)/matrixstack.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking test
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning test
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/Pregame.o: src/Pregame.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Game.o: src/Game.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Thing.o: src/Thing.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/HUD.o: src/HUD.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Intro.o: src/Intro.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Player.o: src/Player.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Pass.o: lib/Qor/Qor/Pass.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Light.o: lib/Qor/Qor/Light.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Scene.o: lib/Qor/Qor/Scene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Actuation.o: lib/Qor/Qor/Actuation.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Net.o: lib/Qor/Qor/Net.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Sprite.o: lib/Qor/Qor/Sprite.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Node.o: lib/Qor/Qor/Node.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Camera.o: lib/Qor/Qor/Camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Material.o: lib/Qor/Qor/Material.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Session.o: lib/Qor/Qor/Session.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Grid.o: lib/Qor/Qor/Grid.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Canvas.o: lib/Qor/Qor/Canvas.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Sound.o: lib/Qor/Qor/Sound.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Audio.o: lib/Qor/Qor/Audio.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ViewModel.o: lib/Qor/Qor/ViewModel.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ResourceCache.o: lib/Qor/Qor/ResourceCache.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Physics.o: lib/Qor/Qor/Physics.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/BasicState.o: lib/Qor/Qor/BasicState.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Pipeline.o: lib/Qor/Qor/Pipeline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/NodeInterface.o: lib/Qor/Qor/NodeInterface.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TileMap.o: lib/Qor/Qor/TileMap.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/LoadingState.o: lib/Qor/Qor/LoadingState.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Filesystem.o: lib/Qor/Qor/Filesystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/BasicPartitioner.o: lib/Qor/Qor/BasicPartitioner.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Graphics.o: lib/Qor/Qor/Graphics.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Texture.o: lib/Qor/Qor/Texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Profile.o: lib/Qor/Qor/Profile.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/PipelineShader.o: lib/Qor/Qor/PipelineShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Resource.o: lib/Qor/Qor/Resource.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Qor.o: lib/Qor/Qor/Qor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/StateMachine.o: lib/Qor/Qor/StateMachine.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ScriptState.o: lib/Qor/Qor/ScriptState.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Input.o: lib/Qor/Qor/Input.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Particle.o: lib/Qor/Qor/Particle.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Console.o: lib/Qor/Qor/Console.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Headless.o: lib/Qor/Qor/Headless.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ScreenFader.o: lib/Qor/Qor/ScreenFader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Interpreter.o: lib/Qor/Qor/Interpreter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Window.o: lib/Qor/Qor/Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ShadowBuffer.o: lib/Qor/Qor/ShadowBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Mesh.o: lib/Qor/Qor/Mesh.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/PlayerInterface3D.o: lib/Qor/Qor/PlayerInterface3D.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Shader.o: lib/Qor/Qor/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/PlayerInterface2D.o: lib/Qor/Qor/PlayerInterface2D.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Menu.o: lib/Qor/Qor/Menu.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Tracker.o: lib/Qor/Qor/Tracker.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Util.o: lib/Qor/Qor/Util.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/suite.o: lib/Qor/Qor/tests/suite.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/log.o: lib/Qor/lib/kit/kit/log/log.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/args.o: lib/Qor/lib/kit/kit/args/args.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/matrixstack.o: lib/Qor/lib/kit/kit/math/matrixstack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
